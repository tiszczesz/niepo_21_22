// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3tisp_school1.Data;

namespace _3tisp_school1.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20211103140154_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_3tisp_school1.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            GradeName = "celujący",
                            Section = "Informatyka"
                        },
                        new
                        {
                            GradeId = 2,
                            GradeName = "dobry",
                            Section = "Informatyka"
                        },
                        new
                        {
                            GradeId = 3,
                            GradeName = "dostateczny",
                            Section = "Informatyka"
                        },
                        new
                        {
                            GradeId = 4,
                            GradeName = "bardzo dobry",
                            Section = "Informatyka"
                        },
                        new
                        {
                            GradeId = 5,
                            GradeName = "dopuszczający",
                            Section = "Informatyka"
                        },
                        new
                        {
                            GradeId = 6,
                            GradeName = "niedostateczny",
                            Section = "Informatyka"
                        });
                });

            modelBuilder.Entity("_3tisp_school1.Models.Student", b =>
                {
                    b.Property<int>("IdStudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("IdStudentId");

                    b.HasIndex("GradeId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            IdStudentId = 1,
                            DateOfBirth = new DateTime(2000, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 5,
                            Height = 178m,
                            StudentName = "Roman",
                            Weight = 89.9f
                        },
                        new
                        {
                            IdStudentId = 2,
                            DateOfBirth = new DateTime(2005, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 2,
                            Height = 178m,
                            StudentName = "Monika",
                            Weight = 89.9f
                        },
                        new
                        {
                            IdStudentId = 3,
                            DateOfBirth = new DateTime(2007, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 3,
                            Height = 178m,
                            StudentName = "Tomasz",
                            Weight = 89.9f
                        },
                        new
                        {
                            IdStudentId = 4,
                            DateOfBirth = new DateTime(1999, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            Height = 178m,
                            StudentName = "Urszula",
                            Weight = 89.9f
                        });
                });

            modelBuilder.Entity("_3tisp_school1.Models.Student", b =>
                {
                    b.HasOne("_3tisp_school1.Models.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("_3tisp_school1.Models.Grade", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
